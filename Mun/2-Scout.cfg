// ContractConfiguration sample file

    // Each CONTRACT_TYPE node represents a type of contract that can be offered
    CONTRACT_TYPE
    {
        name = ScoutMun

        // Contract text details
        title = Scout for a Ideal Kolonization site!
        description = With a good landing spot selected, its time to put down a rover to check the landing site and obtain some core samples.
        synopsis = With a good landing spot selected, its time to put down a rover to check the landing site and obtain some core samples.
        completedMessage = Great! This site looks perfect. 

        // Agent (agency).  If not populated, a random agent will be selected.
        agent = Umbra Space Industries

        // Contract min/max expiry in days.  Default is a contract that does not
        // expire.
        minExpiry = 500.0
        maxExpiry = 1000.0

        // Contract deadline in days.  Default is no deadline.
        deadline = 500

        // Controls for whether a contract can be declined or cancelled, default is
        // true for both
        cancellable = true
        declinable = true
        prestige = Exceptional

        // Target Celestial body - controls where the contract must be completed,
        // has some automated effects on numeric values (increasing science, etc.).
        // Also gets used in some of the parameter classes.
        //
        // Default = null (no celestial body)
        targetBody = Mun

        // The maximum number of times this contract type can be completed (0 being
        // unlimited).
        // Default = 0
        maxCompletions = 1

        // The maximum instances of this contract that can be active at one time (0
        // being unlimited).
        // Default = 0
        maxSimultaneous = 1

        // Contract rewards
        rewardScience = 20.0
        rewardReputation = 5.0
        rewardFunds = 50000.0
        failureReputation = 5.0
        failureFunds = 50000.0
        advanceFunds = 10000.0
        
		DATA
		{
			type = Vessel
			requiredValue = false
			targetVessel = [ MunRover ].Random()
		}
		
		//Define the new Rover
		
		PARAMETER
		{
			name = MunRover
			type = VesselParameterGroup
			hideChildren = false
			title = Launch a new unmanned rover to scout for a Kolonization site.
			notes = The rover must be unmanned and have a communications antenna and Surface Scanner.
			//defines the mun Rover
			define = munRoverNew
			
			PARAMETER
			{
				name = MunLanding
				type = ReachState
				targetBody = Mun
				situation = LANDED
				title = Land your rover on the Mun to take samples and ground proof your landing site.
			}
			PARAMETER
			{
				name = PartValidationScanner
				type = PartValidation
				title = 1 or more surface scanning devices.
				part = SurfaceScanner
				minCount = 1
			}
			PARAMETER:NEEDS[!Remotetech]
			{
				name = PartValidationTransmitter
				type = PartValidation
				partModule = ModuleDataTransmitter
				minCount = 1
			}
			PARAMETER:NEEDS[Remotetech]
			{
				name = PartValidationTransmitterRT
				type = PartValidation
				partModule = ModuleRTAntenna
				minCount = 1
			}
			PARAMETER
			{
				name = PowerValidation
				type = Any
				title = Have one of the following power generators

				PARAMETER
				{
					name = PartValidationRTG
					type = PartValidation
					hideChildren = true
					title = 1 or more RTG's
                    partModule = ModuleGenerator
					minCount = 1
				}	
                
				PARAMETER
				{
					name = PartValidationSolar
					type = PartValidation
					hideChildren = true
					title = 1 or more solar panels
           			partModule = ModuleDeployableSolarPanel
					minCount = 1
				}
			}
		}
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = ScanMun
			minCount = 1
			cooldownDuration = 1m
		}
		REQUIREMENT
		{
			name = PartModuleTypeUnlocked
			type = PartModuleTypeUnlocked
			partModuleType = Wheel
		}
	
	
		
	}