    // Each CONTRACT_TYPE node represents a type of contract that can be offered
    CONTRACT_TYPE
    {
        // Unique name of the contract type (required)
        name = ScanMun
		group = Mun
        // Contract text details
        title = Scan the Mun for Resources!
        description = With our expanding space program, its time to start thinking about a more permanent presence on the Mun!  We should begin by scouting for a proper site.
        synopsis = Use an unmanned satellite to scout for a resource rich areas in which to found your new Kolony.
        completedMessage = Scan Complete! There are some promising looking areas.  

        agent = Umbra Space Industries

        // Contract min/max expiry in days.  Default is a contract that does not
        // expire.
        minExpiry = 500.0
        maxExpiry = 1000.0

        // Contract deadline in days.  Default is no deadline.
        deadline = 500

        // Controls for whether a contract can be declined or cancelled, default is
        // true for both
        cancellable = true
        declinable = true

        // Prestige.  If not specified, this contract type will be available at any
        // prestige level.  Otherwise, locked to the level specified.  Values from
        // Contract.ContractPrestige:
        //     Trivial
        //     Significant
        //     Exceptional
        prestige = Exceptional

        // Target Celestial body - controls where the contract must be completed,
        // has some automated effects on numeric values (increasing science, etc.).
        // Also gets used in some of the parameter classes.
        //
        // Default = null (no celestial body)
        targetBody = Mun

        // The maximum number of times this contract type can be completed (0 being
        // unlimited).
        // Default = 0
        maxCompletions = 1

        // The maximum instances of this contract that can be active at one time (0
        // being unlimited).
        // Default = 0
        maxSimultaneous = 1

        // Contract rewards
        rewardScience = 100.0
        rewardReputation = 20.0
        rewardFunds = 200000.0
        failureReputation = 10.0
        failureFunds = 50000.0
        advanceFunds = 40000.0

        
		DATA
		{
			type = Vessel
			requiredValue = false
			targetVessel = [ MunScanner ].Random()
		}
		
		//Define the new satellite
		PARAMETER
		{
			name = MunSatellite
			type = VesselParameterGroup
			hideChildren = false
			title = Launch a new unmanned probe to scan the Mun for resource rich areas.
			notes = The probe must be unmanned and have a communications antenna and USI-Planetary Survey Camera.
			//defines the mun probe
			define = MunScannerNew
			
			PARAMETER
			{
			    name = Mun
				type = Orbit
				hideChildren = false
				targetBody = Mun
				maxAltitude = 500000
				minInclination = 80
				maxInclination = 110
			}
			PARAMETER:NEEDS[SCANsat]
			{
				name = SCANsatCoverage
				type = SCANsatCoverage
				targetBody = Mun
				// Coverage percentage that must be reached
				coverage = 75
				scanType = Water
			}
			PARAMETER
			{
				name = PartValidationScanner
				type = PartValidation
				title = 1 or more scanning devices.
				part = MKS_Antenna
				minCount = 1
			}
			PARAMETER:NEEDS[!Remotetech]
			{
				name = PartValidationTransmitter
				type = PartValidation
				partModule = ModuleDataTransmitter
				minCount = 1
			}
			PARAMETER:NEEDS[Remotetech]
			{
				name = PartValidationTransmitterRT
				type = PartValidation
				partModule = ModuleRTAntenna
				minCount = 1
			}
			PARAMETER
			{
				name = PowerValidation
				type = Any
				title = Have one of the following power generators

				PARAMETER
				{
					name = PartValidationRTG
					type = PartValidation
					hideChildren = true
					title = 1 or more RTG's
                    partModule = ModuleGenerator
					minCount = 1
				}	
                
				PARAMETER
				{
					name = PartValidationSolar
					type = PartValidation
					hideChildren = true
					title = 1 or more solar panels
           			partModule = ModuleDeployableSolarPanel
					minCount = 1
				}
			}
		}
		
		//STILL NEED TO ADD IN SCANSAT REQS
		REQUIREMENT
		{
			name = FlyBy
			type = FlyBy

			// Target celestial body.  Defaults to the targetBody of the contract.
			targetBody = Mun
		}
		REQUIREMENT
		{
			name = PartModuleTypeUnlocked
			type = PartModuleTypeUnlocked
			partModuleType = Power
			partModuleType = Antenna
		}
		REQUIREMENT
		{
			name = PartUnlocked
			type = PartUnlocked

			// Part name that needs to be unlocked.  May be specified multiple
			// times.
			part = MKS_Antenna
		}
		
	}
